@charset "utf-8";
@import "compass/utilities/sprites";

@function pxToRem($pxVal) {
  $pxVal : $pxVal / ($pxVal * 0 + 1);// 去单位
  @if  $pxVal == 0{
    @return 0;
  } @else {
    @return $pxVal/64 * 1rem;
  }
}

// 生成图片精灵
@function creatSprite($globImgPath, $spacing: 10px){
  @return  sprite-map($globImgPath, $spacing: $spacing, $layout: vertical);
}

// 更多设置见 http://compass-style.org/help/tutorials/spriting/customization-options/
@mixin icon($name, $sprites, $isRem: false) {
    $iconPath: sprite-file($sprites, $name); // 图标文件的路径
    $iconWidth: image-width($iconPath);
    $iconHeight: image-height($iconPath);
    $iconPosXInSprite: 0;// 垂直放的
    $iconPosYInSprite: nth(sprite-position($sprites, $name), 2);
    background-repeat: no-repeat;
    background-image: sprite-url($sprites);
    @if $isRem {
      width: pxToRem($iconWidth);
      height: pxToRem($iconHeight);
      $spriteWidth: sprite-width($sprites);
      $spriteHeight: sprite-height($sprites);
      /*
      * 完美解决移动端使用 rem 单位时 CSS Sprites 错位问题
      * (https://github.com/banricho/webLog/issues/1
      */
      @if $iconPosYInSprite != 0 {
        $iconPosYInSprite: $iconPosYInSprite / ($iconHeight - $spriteHeight) * 100%;
      }
      background-position: $iconPosXInSprite $iconPosYInSprite;
      background-size: pxToRem($spriteWidth) pxToRem($spriteHeight);
    } @else {
      width: $iconWidth;
      height: $iconWidth;
      background-position: $iconPosXInSprite $iconPosYInSprite;
    }
}



